{"ast":null,"code":"import axios from 'axios'; // action types\n\nexport const LOGIN_START = 'LOGIN_START';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_ABSOLUTE_FAILURE = 'LOGIN_ABSOLUTE_FAILURE';\nexport const login = creds => dispatch => {\n  dispatch({\n    type: LOGIN_START\n  });\n  return axios.post('https://bublapp.herokuapp.com/api/auth/login', creds).then(res => {\n    debugger;\n    localStorage.setItem('token', res.data.payload);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data.payload\n    });\n  }).catch(err => console.log(err));\n};\nexport const FETCH_USERS_START = 'FETCH_USERS_START';\nexport const FETCH_USERS_SUCCESS = 'FETCH_USERS_SUCCESS';\nexport const FETCH_USERS_FAIL = 'FETCH_USERS_FAIL';\nexport const getUsers = token => dispatch => {\n  dispatch({\n    type: FETCH_USERS_START\n  });\n  axios.get('https://bublapp.herokuapp.com/api/auth/login', {\n    headers: {\n      Authorization: token\n    }\n  }).then(res => {\n    dispatch({\n      type: FETCH_USERS_SUCCESS,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: FETCH_USERS_FAIL,\n      payload: err\n    });\n  });\n};\nexport const ADD_USERS_START = 'ADD_USERS_START';\nexport const ADD_USERS_SUCCESS = 'ADD_USERS_SUCCESS';\nexport const ADD_USERS_FAIL = 'ADD_USERS_FAIL';\nexport const addUser = newUser => dispatch => {\n  dispatch({\n    type: ADD_USERS_START\n  });\n  axios.post(\"https://bublapp.herokuapp.com/api/auth/register\", newUser).then(res => {\n    dispatch({\n      type: ADD_USERS_SUCCESS,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: ADD_USERS_FAIL,\n      payload: err\n    });\n  });\n};","map":{"version":3,"sources":["C:\\Users\\victo\\Git\\frontend\\bubl-app\\src\\actions\\index.js"],"names":["axios","LOGIN_START","LOGIN_SUCCESS","LOGIN_ABSOLUTE_FAILURE","login","creds","dispatch","type","post","then","res","localStorage","setItem","data","payload","catch","err","console","log","FETCH_USERS_START","FETCH_USERS_SUCCESS","FETCH_USERS_FAIL","getUsers","token","get","headers","Authorization","ADD_USERS_START","ADD_USERS_SUCCESS","ADD_USERS_FAIL","addUser","newUser"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,sBAAsB,GAAG,wBAA/B;AAEP,OAAO,MAAMC,KAAK,GAAGC,KAAK,IAAIC,QAAQ,IAAI;AACtCA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEN;AAAR,GAAD,CAAR;AACA,SAAOD,KAAK,CACPQ,IADE,CACG,8CADH,EACmDH,KADnD,EAEFI,IAFE,CAEGC,GAAG,IAAI;AACT;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,GAAG,CAACG,IAAJ,CAASC,OAAvC;AACAR,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL,aAAR;AAAuBY,MAAAA,OAAO,EAAEJ,GAAG,CAACG,IAAJ,CAASC;AAAzC,KAAD,CAAR;AACH,GANE,EAOFC,KAPE,CAOIC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAPX,CAAP;AAQH,CAVM;AAaP,OAAO,MAAMG,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AAEP,OAAO,MAAMC,QAAQ,GAAIC,KAAD,IAAWjB,QAAQ,IAAI;AAC7CA,EAAAA,QAAQ,CAAE;AAAEC,IAAAA,IAAI,EAAEY;AAAR,GAAF,CAAR;AACAnB,EAAAA,KAAK,CACFwB,GADH,CACO,8CADP,EACuD;AACjDC,IAAAA,OAAO,EAAE;AACLC,MAAAA,aAAa,EAAEH;AADV;AADwC,GADvD,EAMGd,IANH,CAMQC,GAAG,IAAI;AACXJ,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEa,mBAAR;AAA6BN,MAAAA,OAAO,EAAEJ,GAAG,CAACG;AAA1C,KAAD,CAAR;AACD,GARH,EASGE,KATH,CASSC,GAAG,IAAI;AACZV,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEc,gBAAR;AAA0BP,MAAAA,OAAO,EAAEE;AAAnC,KAAD,CAAR;AACD,GAXH;AAYD,CAdM;AAgBP,OAAO,MAAMW,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AAEP,OAAO,MAAMC,OAAO,GAAGC,OAAO,IAAIzB,QAAQ,IAAI;AAC5CA,EAAAA,QAAQ,CAAE;AAAEC,IAAAA,IAAI,EAAEoB;AAAR,GAAF,CAAR;AACA3B,EAAAA,KAAK,CACFQ,IADH,oDAC2DuB,OAD3D,EAEGtB,IAFH,CAEQC,GAAG,IAAI;AACXJ,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEqB,iBAAR;AAA2Bd,MAAAA,OAAO,EAAEJ,GAAG,CAACG;AAAxC,KAAD,CAAR;AACD,GAJH,EAKGE,KALH,CAKSC,GAAG,IAAI;AACZV,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEsB,cAAR;AAAwBf,MAAAA,OAAO,EAAEE;AAAjC,KAAD,CAAR;AACD,GAPH;AAQD,CAVM","sourcesContent":["import axios from 'axios';\r\n// action types\r\nexport const LOGIN_START = 'LOGIN_START';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_ABSOLUTE_FAILURE = 'LOGIN_ABSOLUTE_FAILURE';\r\n\r\nexport const login = creds => dispatch => {\r\n    dispatch({ type: LOGIN_START });\r\n    return axios\r\n        .post('https://bublapp.herokuapp.com/api/auth/login', creds)\r\n        .then(res => {\r\n            debugger;\r\n            localStorage.setItem('token', res.data.payload)\r\n            dispatch({ type: LOGIN_SUCCESS, payload: res.data.payload })\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\n\r\nexport const FETCH_USERS_START = 'FETCH_USERS_START';\r\nexport const FETCH_USERS_SUCCESS = 'FETCH_USERS_SUCCESS';\r\nexport const FETCH_USERS_FAIL = 'FETCH_USERS_FAIL';\r\n\r\nexport const getUsers = (token) => dispatch => {\r\n  dispatch ({ type: FETCH_USERS_START });\r\n  axios\r\n    .get('https://bublapp.herokuapp.com/api/auth/login', {\r\n        headers: {\r\n            Authorization: token\r\n        }\r\n    })\r\n    .then(res => {\r\n      dispatch({ type: FETCH_USERS_SUCCESS, payload: res.data })\r\n    })\r\n    .catch(err => {\r\n      dispatch({ type: FETCH_USERS_FAIL, payload: err})\r\n    })\r\n}\r\n\r\nexport const ADD_USERS_START = 'ADD_USERS_START';\r\nexport const ADD_USERS_SUCCESS = 'ADD_USERS_SUCCESS';\r\nexport const ADD_USERS_FAIL = 'ADD_USERS_FAIL';\r\n\r\nexport const addUser = newUser => dispatch => {\r\n  dispatch ({ type: ADD_USERS_START });\r\n  axios\r\n    .post(`https://bublapp.herokuapp.com/api/auth/register`, newUser)\r\n    .then(res => {\r\n      dispatch({ type: ADD_USERS_SUCCESS, payload: res.data });\r\n    })\r\n    .catch(err => {\r\n      dispatch({ type: ADD_USERS_FAIL, payload: err});\r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}